


SAMPHOLD_m
==========

Sample and hold



Block Screenshot
~~~~~~~~~~~~~~~~





Contents
~~~~~~~~


+ `Sample and hold`_
  +

    + `Palette`_
    + `Description`_
    + `Dialog box`_
    + `Default properties`_
    + `Interfacing function`_
    + `Computational function`_
    + `Example`_





Palette
~~~~~~~


+ `Signal Processing palette`_




Description
~~~~~~~~~~~

Each time an input event is received block copy its input on the
output and hold it until input event. For periodic Sample and hold,
event input must be generated by a **Clock**.



Dialog box
~~~~~~~~~~






+ **Datatype(1=real double 2=Complex 3=int32 ...)** Output datatype.
  This block can support all data types. Properties : Type 'vec' of size
  1.




Default properties
~~~~~~~~~~~~~~~~~~


+ **always active:** no
+ **direct-feedthrough:** yes
+ **zero-crossing:** no
+ **mode:** no
+ **regular inputs:** **- port 1 : size [-1,-2] / type 1**
+ **regular outputs:** **- port 1 : size [-1,-2] / type 1**
+ **number/sizes of activation inputs:** 1
+ **number/sizes of activation outputs:** 0
+ **continuous-time state:** no
+ **discrete-time state:** no
+ **object discrete-time state:** no
+ **name of computational function:** samphold4_m




Interfacing function
~~~~~~~~~~~~~~~~~~~~


+ SCI/modules/scicos_blocks/macros/Linear/SAMPHOLD_m.sci




Computational function
~~~~~~~~~~~~~~~~~~~~~~


+ SCI/modules/scicos_blocks/src/c/samphold4_m.c (Type 4)




Example
~~~~~~~

` `_

.. _Palette: SAMPHOLD_m.html#Palette_SAMPHOLD_m
.. _Sample and hold: SAMPHOLD_m.html
.. _Description: SAMPHOLD_m.html#Description_SAMPHOLD_m
.. _Dialog box: SAMPHOLD_m.html#Dialogbox_SAMPHOLD_m
.. _Computational function: SAMPHOLD_m.html#Computationalfunction_SAMPHOLD_m
.. _Interfacing function: SAMPHOLD_m.html#Interfacingfunction_SAMPHOLD_m
.. _Default properties: SAMPHOLD_m.html#Defaultproperties_SAMPHOLD_m
.. _Signal Processing palette: Signalprocessing_pal.html
.. _Example: SAMPHOLD_m.html#Example_SAMPHOLD_m


