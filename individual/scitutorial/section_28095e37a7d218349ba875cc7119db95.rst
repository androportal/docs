


Tcl/Tk Interface
~~~~~~~~~~~~~~~~


+ `ScilabEval`_ tcl instruction : Evaluate a string with scilab
  interpreter
+ `TCL_CreateSlave`_ Create a TCL slave interpreter
+ `TCL_DeleteInterp`_ delete TCL interpreter
+ `TCL_EvalFile`_ Reads and evaluate a tcl/tk file
+ `TCL_EvalStr`_ Evaluate a string whithin the Tcl/Tk interpreter
+ `TCL_ExistArray`_ Return %T if a tcl array exists
+ `TCL_ExistInterp`_ Return %T if a tcl slave interperter exists
+ `TCL_ExistVar`_ Return %T if a tcl variable exists
+ `TCL_GetVar`_ Get a tcl/tk variable value
+ `TCL_GetVersion`_ get the version of the TCL/TK library at runtime.
+ `TCL_SetVar`_ Set a tcl/tk variable value
+ `TCL_UnsetVar`_ Remove a tcl variable
+ `TCL_UpVar`_ Make a link from a tcl source variable to a tcl
  destination variable
+ `config`_ Scilab general configuration.
+ `winclose`_ close windows created by sciGUI
+ `winlist`_ Return the winId of current window created by sciGUI


.. _TCL_ExistVar: TCL_ExistVar.html
.. _TCL_UpVar: TCL_UpVar.html
.. _TCL_ExistArray: TCL_ExistArray.html
.. _TCL_SetVar: TCL_SetVar.html
.. _config: config.html
.. _TCL_GetVersion: TCL_GetVersion.html
.. _TCL_DeleteInterp: TCL_DeleteInterp.html
.. _TCL_EvalFile: TCL_EvalFile.html
.. _winlist: winlist.html
.. _winclose: winclose.html
.. _TCL_UnsetVar: TCL_UnsetVar.html
.. _TCL_ExistInterp: TCL_ExistInterp.html
.. _ScilabEval: ScilabEval.html
.. _TCL_EvalStr: TCL_EvalStr.html
.. _TCL_GetVar: TCL_GetVar.html
.. _TCL_CreateSlave: TCL_CreateSlave.html


