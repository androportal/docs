


hilb
====

FIR approximation to a Hilbert transform filter



Calling Sequence
~~~~~~~~~~~~~~~~


::

    xh=hilb(n [,wtype [,par]])




Arguments
~~~~~~~~~

:n odd integer : number of points in filter
: :wtype string : window type `('re','tr','hn','hm','kr','ch')`
  (default `='re'`)
: :par window parameter for `wtype='kr' or 'ch'` default `par=[0 0]`
  see the function window for more help
: :xh Hilbert transform
:



Description
~~~~~~~~~~~

Returns the first n points of an FIR approximation to a Hilbert
transform filter centred around the origin.

The FIR filter is designed by appropraitely windowing the ideal
impulse response `h(n)=(2/(n*pi))*(sin(n*pi/2))^2` for `n` not equal 0
and `h(0)=0`.

An approximation to an analytic signal generator can be built by
designing an FIR (Finite Impulse Response) filter approximation to the
Hilbert transform operator. The analytic signal can then be computed
by adding the appropriately time-shifted real signal to the imaginary
part generated by the Hilbert filter.



References
~~~~~~~~~~

``http://ieeexplore.ieee.org/iel4/78/7823/00330385.pdf?tp=&arnumber=33
0385&isnumber=7823`_`

A. Reilly, G. Frazer, and B. Boashash, "Analytic signal generation
Tips and traps", IEEE Trans. Signal Processing, vol. 42, pp.3241-3245,
Nov. 1994.



See Also
~~~~~~~~


+ `window`_ compute symmetric window of various type
+ `hilbert`_ Discrete-time analytic signal computation of a real
  signal using Hilbert transform




Examples
~~~~~~~~


::

    `plot`_(hilb(51))


.. _isnumber=7823: http://ieeexplore.ieee.org/iel4/78/7823/00330385.pdf?tp=&arnumber=330385&isnumber=7823
.. _window: window.html
.. _hilbert: hilbert.html


